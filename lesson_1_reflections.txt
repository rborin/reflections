How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The tool helped me see only the changes that were made to the file
    so that I could focus on them instead of having to review the whole
    file content.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Maybe when you find a bug you can go back to a version where the bug did not
    exist and then trace the changes to determine the cause of the bug.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    You may forget to commit stuff.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because files may be inter-related which is very likely in computer programs.

How can you use the commands git log and git diff to view the history of files?

    git log shows the commit log and git diff compares the files between commits.

How might using version control make you more confident to make changes that
could break something?

    If you make a mistake you can go back and find when you did it.

Now that you have your workspace set up, what do you want to try using Git for?

    To keep all my programs.
